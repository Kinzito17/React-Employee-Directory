{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(employees) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"breed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Employee Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    onChange: props.handleInputChange,\n    name: \"searchEmployee\",\n    type: \"text\",\n    placeholder: \"Type employee name here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"employees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, employees.map(employee => /*#__PURE__*/React.createElement(\"option\", {\n    value: `${employee.name.first} ${employee.name.last}`,\n    key: `${employee.name.first} ${employee.name.last}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js"],"names":["React","SearchForm","employees","props","handleInputChange","map","employee","name","first","last"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC7B,sBACE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,QAAQ,EAAEC,KAAK,CAACC,iBAFlB;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,WAAW,EAAC,4BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,CAACG,GAAV,CAAcC,QAAQ,iBACrB;AAAQ,IAAA,KAAK,EAAG,GAAEA,QAAQ,CAACC,IAAT,CAAcC,KAAM,IAAGF,QAAQ,CAACC,IAAT,CAAcE,IAAK,EAA5D;AACE,IAAA,GAAG,EAAG,GAAEH,QAAQ,CAACC,IAAT,CAAcC,KAAM,IAAGF,QAAQ,CAACC,IAAT,CAAcE,IAAK,EADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CATF,CADF,CADF;AAoBD;;AAED,eAAeR,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(employees) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"breed\">Employee Name:</label>\n        <input\n          className=\"form-control\"\n          onChange={props.handleInputChange}\n          name=\"searchEmployee\"\n          type=\"text\"\n          placeholder=\"Type employee name here...\"\n        />\n        <datalist id=\"employees\">\n          {employees.map(employee => (\n            <option value={`${employee.name.first} ${employee.name.last}`}\n              key={`${employee.name.first} ${employee.name.last}`} />\n          ))}\n        </datalist>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}