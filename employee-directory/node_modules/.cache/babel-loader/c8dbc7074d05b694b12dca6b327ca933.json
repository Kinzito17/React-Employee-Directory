{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js\";\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport Form from 'react-bootstrap/Form';\nimport Table from \"react-bootstrap/esm/Table\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  console.log(props);\n  const [searchEmployee, setSearchEmployee] = useState(\"\");\n\n  function employeeSearch(evt) {\n    setSearchEmployee(evt);\n    filterEmployee(searchEmployee, props.employees);\n  }\n\n  function filterEmployee(evt, list) {\n    const filteredList = list.filter(employee => employee.name.first.includes(evt));\n\n    if (filteredList.length > 0) {\n      props.employees(filteredList);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Employee Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type employee name here...\",\n    name: \"searchEmployee\",\n    onChange: evt => employeeSearch(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"employees\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.employees.map(employee => /*#__PURE__*/React.createElement(\"option\", {\n    value: `${employee.name.first} ${employee.name.last}`,\n    key: `${employee.name.first} ${employee.name.last}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Table, {\n    employees: employees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js"],"names":["React","useState","Form","Table","SearchForm","props","console","log","searchEmployee","setSearchEmployee","employeeSearch","evt","filterEmployee","employees","list","filteredList","filter","employee","name","first","includes","length","target","value","map","last"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;;AAEA,WAASS,cAAT,CAAwBC,GAAxB,EAA6B;AAC3BF,IAAAA,iBAAiB,CAACE,GAAD,CAAjB;AACAC,IAAAA,cAAc,CAACJ,cAAD,EAAiBH,KAAK,CAACQ,SAAvB,CAAd;AACD;;AAED,WAASD,cAAT,CAAwBD,GAAxB,EAA6BG,IAA7B,EAAmC;AAEjC,UAAMC,YAAY,GAAGD,IAAI,CAACE,MAAL,CAAYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,CAA6BT,GAA7B,CAAxB,CAArB;;AAEA,QAAII,YAAY,CAACM,MAAb,GAAsB,CAA1B,EAA6B;AAC3BhB,MAAAA,KAAK,CAACQ,SAAN,CAAgBE,YAAhB;AAED;AAEF;;AAED,sBACE,uDACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,QAAQ,EAAEJ,GAAG,IAAID,cAAc,CAACC,GAAG,CAACW,MAAJ,CAAWC,KAAZ,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAU,IAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIlB,KAAK,CAACQ,SAAN,CAAgBW,GAAhB,CAAoBP,QAAQ,iBAC1B;AAAQ,IAAA,KAAK,EAAG,GAAEA,QAAQ,CAACC,IAAT,CAAcC,KAAM,IAAGF,QAAQ,CAACC,IAAT,CAAcO,IAAK,EAA5D;AACE,IAAA,GAAG,EAAG,GAAER,QAAQ,CAACC,IAAT,CAAcC,KAAM,IAAGF,QAAQ,CAACC,IAAT,CAAcO,IAAK,EADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CARF,CADF,eAkBE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEZ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD;;AAED,eAAeT,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\nimport Form from 'react-bootstrap/Form'\nimport Table from \"react-bootstrap/esm/Table\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  console.log(props)\n\n  const [searchEmployee, setSearchEmployee] = useState(\"\");\n\n  function employeeSearch(evt) {\n    setSearchEmployee(evt);\n    filterEmployee(searchEmployee, props.employees);\n  }\n\n  function filterEmployee(evt, list) {\n\n    const filteredList = list.filter(employee => employee.name.first.includes(evt));\n\n    if (filteredList.length > 0) {\n      props.employees(filteredList);\n\n    }\n\n  }\n\n  return (\n    <>\n      <Form.Group>\n        <Form.Label>Employee Name:</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Type employee name here...\"\n          name=\"searchEmployee\"\n          onChange={evt => employeeSearch(evt.target.value)}\n        />\n        <datalist id=\"employees\">\n          {\n            props.employees.map(employee => (\n              <option value={`${employee.name.first} ${employee.name.last}`}\n                key={`${employee.name.first} ${employee.name.last}`} />\n            ))\n          }\n        </datalist>\n      </Form.Group>\n      <Table employees={employees} />\n    </>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}