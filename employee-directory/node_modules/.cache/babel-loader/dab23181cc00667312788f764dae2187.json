{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js\";\nimport React from \"react\";\nimport \"./style.css\"; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Employee Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type employee name here...\",\n    name: \"searchEmployee\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  })) // <form className=\"search\">\n  //   <div className=\"form-group\">\n  //     <label htmlFor=\"breed\">Employee Name:</label>\n  //     <input\n  //       className=\"form-control\"\n  //       onChange={props.handleInputChange}\n  //       name=\"searchEmployee\"\n  //       type=\"text\"\n  //       placeholder=\"Type employee name here...\"\n  //     />\n  //     {/* <datalist id=\"employees\">\n  //       {\n  //         employees.map(employee => (\n  //           <option value={`${employee.name.first} ${employee.name.last}`}\n  //             key={`${employee.name.first} ${employee.name.last}`} />\n  //         ))\n  //       }\n  //     </datalist> */}\n  //   </div>\n  // </form>\n  ;\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js"],"names":["React","SearchForm","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,IAAI,EAAC,gBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BF;AA+BD;;AAED,eAAeD,UAAf","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <Form.Group>\n      <Form.Label>Employee Name:</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Type employee name here...\"\n        name=\"searchEmployee\"\n      />\n    </Form.Group>\n\n    // <form className=\"search\">\n    //   <div className=\"form-group\">\n    //     <label htmlFor=\"breed\">Employee Name:</label>\n    //     <input\n    //       className=\"form-control\"\n    //       onChange={props.handleInputChange}\n    //       name=\"searchEmployee\"\n    //       type=\"text\"\n    //       placeholder=\"Type employee name here...\"\n    //     />\n    //     {/* <datalist id=\"employees\">\n    //       {\n    //         employees.map(employee => (\n    //           <option value={`${employee.name.first} ${employee.name.last}`}\n    //             key={`${employee.name.first} ${employee.name.last}`} />\n    //         ))\n    //       }\n    //     </datalist> */}\n    //   </div>\n    // </form>\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}