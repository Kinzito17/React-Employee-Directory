{"ast":null,"code":"var _jsxFileName = \"/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport Form from 'react-bootstrap/Form'; // import SearchResults from \"/components/SearchResults\";\n\nimport API from '../utils/API'; // Using the datalist element we can create autofill suggestions based on the props.breeds array\n\nfunction SearchForm(props) {\n  console.log(props);\n  const [searchEmployee, setSearchEmployee] = useState(\"\");\n  const [employees, setEmployees] = useState([]); //Calls to load employees\n\n  useEffect(() => {\n    loadFifty();\n  }, []); //Calls API\n\n  const loadFifty = () => {\n    API.loadEmps().then(res => {\n      setEmployees(res.data.results);\n    }).catch(err => console.log(err));\n  };\n\n  function employeeSearches(evt) {\n    setSearchEmployee(evt);\n    filterEmployee(searchEmployee, employees);\n  }\n\n  function filterEmployee(evt, list) {\n    const filteredList = list.filter(employee => employee.name.first.includes(evt));\n\n    if (filteredList.length > 0) {\n      setEmployees(filteredList);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Employee Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Type employee name here...\",\n    name: \"searchEmployee\",\n    onChange: evt => employeeSearches(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  })) // <SearchResults employees={employees} />\n  ;\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/matthewkinzle/Desktop/FS BootCamp/HomeWork/React-Employee-Directory/employee-directory/src/components/SearchForm/index.js"],"names":["React","useEffect","useState","Form","API","SearchForm","props","console","log","searchEmployee","setSearchEmployee","employees","setEmployees","loadFifty","loadEmps","then","res","data","results","catch","err","employeeSearches","evt","filterEmployee","list","filteredList","filter","employee","name","first","includes","length","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAGA;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CAJyB,CAMzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CAPyB,CAWzB;;AACA,QAAMA,SAAS,GAAG,MAAM;AACtBT,IAAAA,GAAG,CAACU,QAAJ,GACGC,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,YAAY,CAACI,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAZ;AACD,KAHH,EAIGC,KAJH,CAISC,GAAG,IAAIb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAJhB;AAKD,GAND;;AAQA,WAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BZ,IAAAA,iBAAiB,CAACY,GAAD,CAAjB;AACAC,IAAAA,cAAc,CAACd,cAAD,EAAiBE,SAAjB,CAAd;AACD;;AAED,WAASY,cAAT,CAAwBD,GAAxB,EAA6BE,IAA7B,EAAmC;AAEjC,UAAMC,YAAY,GAAGD,IAAI,CAACE,MAAL,CAAYC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,CAA6BR,GAA7B,CAAxB,CAArB;;AAEA,QAAIG,YAAY,CAACM,MAAb,GAAsB,CAA1B,EAA6B;AAC3BnB,MAAAA,YAAY,CAACa,YAAD,CAAZ;AAED;AAEF;;AAED,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,QAAQ,EAAEH,GAAG,IAAID,gBAAgB,CAACC,GAAG,CAACU,MAAJ,CAAWC,KAAZ,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAUE;AAVF;AAYD;;AAED,eAAe5B,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport Form from 'react-bootstrap/Form'\n// import SearchResults from \"/components/SearchResults\";\nimport API from '../utils/API';\n\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  console.log(props)\n\n  const [searchEmployee, setSearchEmployee] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n\n  //Calls to load employees\n  useEffect(() => {\n    loadFifty()\n  }, [])\n\n  //Calls API\n  const loadFifty = () => {\n    API.loadEmps()\n      .then(res => {\n        setEmployees(res.data.results)\n      })\n      .catch(err => console.log(err));\n  }\n\n  function employeeSearches(evt) {\n    setSearchEmployee(evt);\n    filterEmployee(searchEmployee, employees);\n  }\n\n  function filterEmployee(evt, list) {\n\n    const filteredList = list.filter(employee => employee.name.first.includes(evt));\n\n    if (filteredList.length > 0) {\n      setEmployees(filteredList);\n\n    }\n\n  }\n\n  return (\n    <Form.Group>\n      <Form.Label>Employee Name:</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder=\"Type employee name here...\"\n        name=\"searchEmployee\"\n        onChange={evt => employeeSearches(evt.target.value)}\n      />\n    </Form.Group>\n    // <SearchResults employees={employees} />\n  );\n}\n\nexport default SearchForm;\n"]},"metadata":{},"sourceType":"module"}